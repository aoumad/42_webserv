Note for the remaining things i didn't parse yet in the request.cpp
#/******************************************************************/

this->_headers["Accept-Charsets"] = "";
this->_headers["Accept-Language"] = "";
this->_headers["Allow"] = "";
this->_headers["Auth-Scheme"] = "";
this->_headers["Authorization"] = "";
this->_headers["Content-Language"] = "";
this->_headers["Content-Length"] = "";
this->_headers["Content-Location"] = "";
this->_headers["Content-Type"] = "";
this->_headers["Date"] = "";
this->_headers["Host"] = "";
this->_headers["Last-Modified"] = "";
this->_headers["Location"] = "";
this->_headers["Referer"] = "";
this->_headers["Retry-After"] = "";
this->_headers["Server"] = "";
this->_headers["Transfer-Encoding"] = "";
this->_headers["User-Agent"] = "";
this->_headers["Www-Authenticate"] = "";
this->_headers["Connection"] = "Keep-Alive";

#/******************************************************************/

i need to parse the port number in the host part of the request
if the port isn't specified i just need to assum the port number is 80 in http
something like:
`size_t i = this->_headers["Host"].find_first_of(':');

if (i == std::string::npos)
	this->_port = 80;
else`

#/******************************************************************/
For example,
in the request line "GET /index.html?foo=bar HTTP/1.1", 
the query string is "foo=bar" and it is part of the URI "/index.html?foo=bar".

i need to parse the query and store it in a map
something like:
`std::string query = this->_headers["Host"].substr(i + 1);
std::map<std::string, std::string> query_map;
std::string key;
std::string value;
size_t j = 0;
size_t k = 0;

while (j < query.size())
{
    k = query.find_first_of('=', j);
    key = query.substr(j, k - j);
    j = k + 1;
    k = query.find_first_of('&', j);
    value = query.substr(j, k - j);
    j = k + 1;
    query_map[key] = value;
}`

#/******************************************************************/

I need to parse Accept-Language and Accept-Charset and store them in a map
something like:
`std::string accept_language = this->_headers["Accept-Language"];
std::map<std::string, std::string> accept_language_map;
std::string key;
std::string value;
size_t j = 0;
size_t k = 0;

while (j < accept_language.size())
{
    k = accept_language.find_first_of(';', j);
    key = accept_language.substr(j, k - j);
    j = k + 1;
    k = accept_language.find_first_of(',', j);
    value = accept_language.substr(j, k - j);
    j = k + 1;
    accept_language_map[key] = value;
}`

#/******************************************************************/
i need to clear the _header before using it

this->_header.clear();

#/******************************************************************/
i need to make the parsing function return an int like 505 or 404 or 200...etc
200 will be returned if the parsing is successful
404 will be returned if the request is not found
505 will be returned if the version is not supported
400 will be returned if the request is bad